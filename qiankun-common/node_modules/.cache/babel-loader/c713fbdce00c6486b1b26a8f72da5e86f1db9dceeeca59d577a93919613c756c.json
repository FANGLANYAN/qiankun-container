{"ast":null,"code":"var _jsxFileName = \"/Users/jishuzhongxin/studyDoc/qiankun/fly-admin-react1/src/index.tsx\";\nimport './public-path'; //导入静态资源跟路径 必须放在顶上\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport async function bootstrap() {\n  console.log('[react16] react app bootstraped');\n}\n//@ts-ignore\nexport async function mount(props) {\n  console.log(props, '主应用给应用一');\n  props.onGlobalStateChange((state, preState) => {\n    console.log(state, 'micState');\n  });\n  props.setGlobalState({\n    name: '888'\n  });\n  const {\n    container\n  } = props;\n  ReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 19\n  }, this), container ? container.querySelector('#root') : document.getElementById('root'));\n}\n//@ts-ignore\nexport async function unmount(props) {\n  const {\n    container\n  } = props;\n  ReactDOM.unmountComponentAtNode(container ? container.querySelector('#root') : document.getElementById('root'));\n}\n//@ts-ignore\nexport async function update(props) {\n  console.log('update');\n}\n//@ts-ignore\nfunction render(props) {\n  const {\n    container\n  } = props;\n  ReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 19\n  }, this), container ? container.querySelector('#root') : document.getElementById('root'));\n}\n//@ts-ignore\nif (!window.__POWERED_BY_QIANKUN__) {\n  ReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 19\n  }, this), document.getElementById('root'));\n}\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();","map":{"version":3,"names":["React","ReactDOM","App","reportWebVitals","jsxDEV","_jsxDEV","bootstrap","console","log","mount","props","onGlobalStateChange","state","preState","setGlobalState","name","container","render","fileName","_jsxFileName","lineNumber","columnNumber","querySelector","document","getElementById","unmount","unmountComponentAtNode","update","window","__POWERED_BY_QIANKUN__"],"sources":["/Users/jishuzhongxin/studyDoc/qiankun/fly-admin-react1/src/index.tsx"],"sourcesContent":["import './public-path'  //导入静态资源跟路径 必须放在顶上\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nexport async function bootstrap() {\n  console.log('[react16] react app bootstraped');\n}\n//@ts-ignore\nexport async function mount(props) {\n  console.log(props,'主应用给应用一');\n  props.onGlobalStateChange((state: any,preState: any)=>{\n    console.log(state,'micState');\n    \n  })\n  props.setGlobalState({name:'888'})\n\n  const { container } = props;\n  ReactDOM.render(<App/>,container?container.querySelector('#root'):document.getElementById('root'))\n}\n//@ts-ignore\nexport async function unmount(props) {\n  const { container } = props; \n  ReactDOM.unmountComponentAtNode(container ? container.querySelector('#root') : document.getElementById('root'));\n} \n//@ts-ignore\nexport async function update(props) {\n  console.log('update');\n  \n} \n//@ts-ignore\nfunction render(props) {\n  const { container } = props;\n  ReactDOM.render(<App />, container ? container.querySelector('#root') : document.getElementById('root'));\n}\n//@ts-ignore\nif (!window.__POWERED_BY_QIANKUN__) {\n  ReactDOM.render(<App/>,document.getElementById('root'));\n}\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"mappings":";AAAA,OAAO,eAAe,EAAE;AACxB,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,WAAW;AAChC,OAAO,aAAa;AACpB,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAOC,eAAe,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGhD,OAAO,eAAeC,SAASA,CAAA,EAAG;EAChCC,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAC;AAChD;AACA;AACA,OAAO,eAAeC,KAAKA,CAACC,KAAK,EAAE;EACjCH,OAAO,CAACC,GAAG,CAACE,KAAK,EAAC,SAAS,CAAC;EAC5BA,KAAK,CAACC,mBAAmB,CAAC,CAACC,KAAU,EAACC,QAAa,KAAG;IACpDN,OAAO,CAACC,GAAG,CAACI,KAAK,EAAC,UAAU,CAAC;EAE/B,CAAC,CAAC;EACFF,KAAK,CAACI,cAAc,CAAC;IAACC,IAAI,EAAC;EAAK,CAAC,CAAC;EAElC,MAAM;IAAEC;EAAU,CAAC,GAAGN,KAAK;EAC3BT,QAAQ,CAACgB,MAAM,eAACZ,OAAA,CAACH,GAAG;IAAAgB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC,EAACL,SAAS,GAACA,SAAS,CAACM,aAAa,CAAC,OAAO,CAAC,GAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AACpG;AACA;AACA,OAAO,eAAeC,OAAOA,CAACf,KAAK,EAAE;EACnC,MAAM;IAAEM;EAAU,CAAC,GAAGN,KAAK;EAC3BT,QAAQ,CAACyB,sBAAsB,CAACV,SAAS,GAAGA,SAAS,CAACM,aAAa,CAAC,OAAO,CAAC,GAAGC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AACjH;AACA;AACA,OAAO,eAAeG,MAAMA,CAACjB,KAAK,EAAE;EAClCH,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;AAEvB;AACA;AACA,SAASS,MAAMA,CAACP,KAAK,EAAE;EACrB,MAAM;IAAEM;EAAU,CAAC,GAAGN,KAAK;EAC3BT,QAAQ,CAACgB,MAAM,eAACZ,OAAA,CAACH,GAAG;IAAAgB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,EAAEL,SAAS,GAAGA,SAAS,CAACM,aAAa,CAAC,OAAO,CAAC,GAAGC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AAC1G;AACA;AACA,IAAI,CAACI,MAAM,CAACC,sBAAsB,EAAE;EAClC5B,QAAQ,CAACgB,MAAM,eAACZ,OAAA,CAACH,GAAG;IAAAgB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC,EAACE,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AACzD;AACA;AACA;AACA;AACArB,eAAe,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}